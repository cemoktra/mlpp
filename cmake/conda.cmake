unset(CONDA_BIN_PATH)
unset(CONDA_BIN_PATH CACHE)

if(WIN32)
    set(CONDA_BIN_NAME "conda.bat")
else()
    set(CONDA_BIN_NAME "conda")
endif()

find_program(CONDA_BIN_PATH name "${CONDA_BIN_NAME}" PATHS "/usr/bin/")
if (NOT CONDA_BIN_PATH) 
    find_program(CONDA_BIN_PATH name "${CONDA_BIN_NAME}" PATHS "$ENV{PROGRAMDATA}/Anaconda3/condabin/")
    if (NOT CONDA_BIN_PATH) 
        find_program(CONDA_BIN_PATH name "${CONDA_BIN_NAME}" PATHS "$ENV{PROGRAMDATA}/Miniconda3/condabin/")
    endif()
endif()
if (NOT CONDA_BIN_PATH)
    message(FATAL_ERROR "${CONDA_BIN_NAME} not found! conda is required to setup libraries")
endif()

message(STATUS "updating conda packages")
execute_process(COMMAND "${CONDA_BIN_PATH}" "env" "update" "--prefix" "${CMAKE_SOURCE_DIR}/conda" "-f" "${CMAKE_SOURCE_DIR}/environment.yml" "--prune" OUTPUT_QUIET RESULT_VARIABLE CONDA_RC)

if (CONDA_RC EQUAL 0) 
    message(STATUS "conda update done")
else()
    message(FATAL_ERROR "conda update failed with return code ${CONDA_RC}")
endif()

if(WIN32)
    set(CONDA_LIB_BIN "${CMAKE_SOURCE_DIR}/conda/Library/bin")
    include_directories("${CMAKE_SOURCE_DIR}/conda/Library/include")
    link_directories("${CMAKE_SOURCE_DIR}/conda/Library/lib")
else()
    include_directories("${CMAKE_SOURCE_DIR}/conda/include")
    link_directories("${CMAKE_SOURCE_DIR}/conda/lib")
endif()
